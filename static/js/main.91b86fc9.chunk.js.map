{"version":3,"sources":["Grid.js","Const.js","next/Next.js","score/Score.js","Level.js","Board.js","index.js"],"names":["Grid","props","CreateItemStyle","x","y","color","itemStyle","gridColumn","gridRow","backgroundColor","borderStyle","borderWidth","borderColor","gridElements","board","map","rowElem","indexI","cell","indexJ","react_default","a","createElement","style","key","className","display","gridTemplateColumns","gridTemplateRows","blockStructure","I","L","J","Z","S","O","T","blocks","Next","nextItemElement","piece","Score","score","Level","getBlock","randIndex","Math","floor","random","Board","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","boardMap","i","push","Array","fill","state","nextPiece","currentPiece","current_i","current_j","timer","timerId","sig","j","length","currentI","currentJ","currentBoard","slice","getCurrentBoard","sigPiece","getSignificantPiece","isInRange","k","n","m","rotatedPiece","setState","rightPiece","getRightSignificantPiece","leftPiece","getLeftSignificationPiece","cleanUpRowList","reduce","total","num","first_row","min","apply","last_row","max","newMap","scoreAwarded","new_i","new_j","collisionOccured","renderPiece","cleanUpMap","newPiece","futurePiece","rotateCurrentPiece","leftBoundaryReached","rightBoundaryReached","event","registerMoveRight","registerMoveLeft","registerMoveUp","registerMoveDown","clearInterval","run","_this2","setInterval","updatePosition","window","addEventListener","registerMove","bind","Fragment","src_Grid","score_Score","next_Next","React","Component","ReactDOM","render","src_Board","document","getElementById"],"mappings":"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","file":"static/js/main.91b86fc9.chunk.js","sourcesContent":["import React from 'react';\n\n\nfunction Grid(props){\n\n  function CreateItemStyle(x,y,color){\n\t\tlet itemStyle = {};\n\t\titemStyle.gridColumn = '' + y + '/'+(y+1);\n\t\titemStyle.gridRow = '' + x +'/' + (x+1);\n\t\titemStyle.backgroundColor = color;\n\t\titemStyle.borderStyle = 'solid'\n\t\titemStyle.borderWidth =  '6px';\n    itemStyle.borderColor = 'black';\n\n\t\treturn itemStyle;\n\t}\n\n\n\tconst containerStyle = {\n\t\tdisplay : 'grid',\n\t\tgridTemplateColumns : 'repeat(10,48px)',\n\t\tgridTemplateRows : 'repeat(20,48px)'\n\t};\n\n\tconst gridElements = props.board.map((rowElem,indexI) => {\n\t\tconst rowElements = rowElem.map((cell,indexJ) => {\n\t\t\tlet divElement;\n\t\t\tif(cell)\n\t\t\t    divElement = <div style={CreateItemStyle(indexI + 1,indexJ + 1,'red')} key={indexI * 10 + indexJ} />;\n\t\t\telse {\n\t\t\t\t  divElement = <div style={CreateItemStyle(indexI + 1,indexJ + 1,'blue')} key={indexI * 10 + indexJ} />;\n\t\t\t}\n\t\t\treturn (\n\t\t\t\tdivElement\n\t\t\t);\n\t\t})\n\t\treturn rowElements;\n\t})\n\n\n\treturn(\n\t\t<div className=\"container\" style={containerStyle}>\n\t\t  {gridElements}\n\t\t</div>\n\t);\n}\n\nexport default Grid;\n","const blockStructure = {\n  I : [\n    [1,1,1,1]\n  ],\n  L : [\n    [1,0,0],\n    [1,1,1]\n  ],\n  J : [\n    [0,0,1],\n    [1,1,1]\n  ],\n  Z : [\n    [1,1,0],\n    [0,1,1]\n  ],\n  S : [\n    [0,1,1],\n    [1,1,0]\n  ],\n  O : [\n    [1,1],\n    [1,1]\n  ],\n  T : [\n    [0,1,0],\n    [1,1,1]\n  ]\n};\n\nconst blocks = ['I','L','J','Z','S','O','T'];\n\nexport { blockStructure, blocks };\n","import React from 'react';\nimport './index.css';\n\n\nfunction Next(props){\n  function CreateItemStyle(x,y,color){\n\t\tlet itemStyle = {};\n\t\titemStyle.gridColumn = '' + y + '/'+(y+1);\n\t\titemStyle.gridRow = '' + x +'/' + (x+1);\n\t\titemStyle.backgroundColor = color;\n\t\titemStyle.borderStyle = 'solid'\n\t\titemStyle.borderWidth =  '8px'\n\n\t\treturn itemStyle;\n\t}\n\n\n\tconst containerStyle = {\n\t\tdisplay : 'grid',\n\t\tgridTemplateColumns : 'repeat(4,48px)',\n\t\tgridTemplateRows : 'repeat(2,48px)'\n\t};\n\n  let nextItemElement = props.piece.map((rowElem,indexI) => {\n    const pieceElement = rowElem.map((cell,indexJ) => {\n      let divElement;\n      if(cell)\n        divElement = <div style={CreateItemStyle(indexI + 1,indexJ + 1,'red')} key={indexI * 10 + indexJ} />;\n      else {\n         divElement = <div style={CreateItemStyle(indexI + 1,indexJ + 1,'black')} key={indexI * 10 + indexJ} />;\n      }\n      return divElement;\n    })\n    return pieceElement;\n  })\n\n\n  return(\n    <div className=\"border\">\n    <h1 className=\"score\">Next</h1>\n    <div style={containerStyle}>\n      {nextItemElement}\n    </div>\n    </div>\n  )\n}\n\nexport default Next;\n","import React from 'react';\nimport './index.css';\n\nfunction Score(props){\n\n  return (\n    <div className=\"border\">\n    <h1 className=\"score\">Score</h1>\n    <h1 className=\"score\">{props.score}</h1>\n    </div>\n  );\n}\n\nexport default Score;\n","import React from 'react';\n\n\nexport default function Level(props) {\n\n  return (\n    <div className=\"border\">\n    <h1 className=\"score\">Level</h1>\n    <h1 className=\"score\">1</h1>\n    </div>\n  )\n}\n","import React from \"react\";\nimport Grid from \"./Grid\";\nimport { blockStructure, blocks } from \"./Const\";\nimport Next from \"./next/Next\";\nimport Score from \"./score/Score\";\nimport Level from \"./Level\";\nimport \"./board.css\";\nimport \"./index.css\";\n\nfunction getBlock() {\n  const randIndex = Math.floor(Math.random() * 7);\n  return blockStructure[blocks[randIndex]];\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const boardMap = [];\n    for (let i = 0; i < 20; i++) boardMap.push(Array(10).fill(0));\n\n    this.state = {\n      boardMap: boardMap,\n      nextPiece: {\n        piece: getBlock()\n      },\n      currentPiece: {\n        piece: getBlock()\n      },\n      current_i: 0,\n      current_j: 0,\n      timer: 500,\n      score: 0,\n      timerId: 0\n    };\n  }\n\n  getSignificantPiece() {\n    const currentPiece = this.state.currentPiece.piece;\n    let sig = [];\n    for (let j = 0; j < currentPiece[0].length; j++)\n      for (let i = currentPiece.length - 1; i >= 0; i--)\n        if (currentPiece[i][j]) {\n          sig.push(i);\n          break;\n        }\n    return sig;\n  }\n\n  getLeftSignificationPiece() {\n    const currentPiece = this.state.currentPiece.piece;\n    let sig = [];\n    for (let i = 0; i < currentPiece.length; i++) {\n      for (let j = 0; j < currentPiece[0].length; j++) {\n        if (currentPiece[i][j]) {\n          sig.push(j);\n          break;\n        }\n      }\n    }\n    return sig;\n  }\n\n  getRightSignificantPiece() {\n    const currentPiece = this.state.currentPiece.piece;\n    let sig = [];\n    for (let i = 0; i < currentPiece.length; i++) {\n      for (let j = currentPiece[0].length - 1; j >= 0; j--) {\n        if (currentPiece[i][j]) {\n          sig.push(j);\n          break;\n        }\n      }\n    }\n    return sig;\n  }\n  isInRange(x, y) {\n    if (x > -1 && x < 20 && y > -1 && y < 10) return true;\n    return false;\n  }\n\n  getCurrentBoard() {\n    const currentPiece = this.state.currentPiece.piece;\n    const boardMap = this.state.boardMap;\n    const currentI = this.state.current_i;\n    const currentJ = this.state.current_j;\n\n    const currentBoard = [];\n    for (let i = 0; i < boardMap.length; i++)\n      currentBoard.push(boardMap[i].slice());\n\n    for (let i = 0; i < currentPiece.length; i++)\n      for (let j = 0; j < currentPiece[i].length; j++) {\n        if (currentPiece[i][j] && i + currentI < 20 && j + currentJ < 10)\n          currentBoard[i + currentI][j + currentJ] = currentPiece[i][j];\n      }\n    return currentBoard;\n  }\n\n  collisionOccured() {\n    const currentPiece = this.state.currentPiece.piece;\n    const currentBoard = this.getCurrentBoard();\n    const sigPiece = this.getSignificantPiece();\n    const current_i = this.state.current_i;\n    const current_j = this.state.current_j;\n\n    if (this.isInRange(current_i + currentPiece.length, current_j)) {\n      for (let k = 0; k < sigPiece.length; k++) {\n        if (\n          currentBoard[current_i + sigPiece[k]][current_j + k] &&\n          currentBoard[current_i + sigPiece[k] + 1][current_j + k]\n        ) {\n          return true;\n        }\n      }\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  rotateCurrentPiece() {\n    const currentPiece = this.state.currentPiece.piece;\n    const n = currentPiece[0].length;\n    const m = currentPiece.length;\n\n    let rotatedPiece = {};\n    rotatedPiece.piece = [];\n\n    for (let i = 0; i < n; i++) rotatedPiece.piece.push(Array(m).fill(0));\n\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++)\n        rotatedPiece.piece[n - j - 1][i] = currentPiece[i][j];\n    }\n\n    this.setState({\n      currentPiece: rotatedPiece\n    });\n  }\n\n  rightBoundaryReached() {\n    const currentPiece = this.state.currentPiece.piece;\n    const currentBoard = this.getCurrentBoard();\n    const rightPiece = this.getRightSignificantPiece();\n    let current_i = this.state.current_i;\n    let current_j = this.state.current_j;\n\n    //rightmost elements\n    if (current_j + currentPiece[0].length >= 10) {\n      return true;\n    }\n    //check if atleast one element to the right is blocking\n    for (let k = 0; k < rightPiece.length; k++) {\n      if (\n        currentBoard[current_i + k][current_j + rightPiece[k]] &&\n        currentBoard[current_i + k][current_j + rightPiece[k] + 1]\n      )\n        return true;\n    }\n    return false;\n  }\n  leftBoundaryReached() {\n    const currentBoard = this.getCurrentBoard();\n    const leftPiece = this.getLeftSignificationPiece();\n    let current_i = this.state.current_i;\n    let current_j = this.state.current_j;\n\n    //lefmost elements\n    if (current_j - 1 < 0) {\n      return true;\n    }\n    //check if atleast one element to the left is blocking\n    for (let k = 0; k < leftPiece.length; k++) {\n      if (\n        currentBoard[current_i + k][current_j + leftPiece[k]] &&\n        currentBoard[current_i + k][current_j + leftPiece[k] - 1]\n      )\n        return true;\n    }\n\n    return false;\n  }\n\n  renderPiece() {\n    const currentBoard = this.getCurrentBoard();\n    this.setState({\n      boardMap: currentBoard\n    });\n  }\n\n  cleanUpMap() {\n    //check if there is any row with all ones\n    const currentBoard = this.state.boardMap;\n    let cleanUpRowList = [];\n\n    for (let i = 0; i < currentBoard.length; i++)\n      if (\n        currentBoard[i].reduce((total, num) => total + num) ===\n        currentBoard[i].length\n      )\n        cleanUpRowList.push(i);\n    if (cleanUpRowList.length === 0) return;\n    let first_row = Math.min(...cleanUpRowList);\n    let last_row = Math.max(...cleanUpRowList);\n\n    //translate every element to this row\n    const newMap = [];\n    for (let i = 0; i < 20; i++) newMap.push(Array(10).fill(0));\n\n    for (let i = 19; i > last_row; i--) newMap[i] = currentBoard[i].slice();\n\n    for (let i = 0; i < first_row; i++)\n      newMap[i + last_row - first_row + 1] = currentBoard[i].slice();\n\n    const scoreAwarded = this.state.score + (last_row - first_row + 1) * 100;\n\n    this.setState({\n      boardMap: newMap,\n      score: scoreAwarded\n    });\n  }\n\n  updatePosition() {\n    let new_i = this.state.current_i;\n    const new_j = this.state.current_j;\n\n    if (this.collisionOccured()) {\n      this.renderPiece();\n      this.cleanUpMap();\n      /**move this into a diffrent location **/\n      const newPiece = {};\n      newPiece.piece = this.state.nextPiece.piece;\n      const futurePiece = {};\n      futurePiece.piece = getBlock();\n      this.setState({\n        current_i: 0,\n        current_j: 0,\n        currentPiece: newPiece,\n        nextPiece: futurePiece\n      });\n    } else {\n      new_i = new_i + 1;\n\n      this.setState({\n        current_i: new_i,\n        current_j: new_j\n      });\n    }\n  }\n  registerMoveUp() {\n    const currentJ = this.state.current_j;\n    const currentPieceLength = this.state.currentPiece.piece.length;\n    if (currentJ + currentPieceLength < 10) {\n      this.rotateCurrentPiece();\n    }\n  }\n\n  registerMoveLeft() {\n    let new_j = this.state.current_j;\n    if (this.leftBoundaryReached()) {\n      return;\n    } else {\n      new_j = new_j - 1;\n      this.setState({\n        current_j: new_j\n      });\n    }\n  }\n  registerMoveRight() {\n    let new_j = this.state.current_j;\n    if (this.rightBoundaryReached()) {\n      return;\n    } else {\n      new_j = new_j + 1;\n      this.setState({\n        current_j: new_j\n      });\n    }\n  }\n  registerMoveDown() {\n    const current_i = this.state.current_i;\n    if (this.collisionOccured()) return;\n    let new_i = current_i + 1;\n    this.setState({\n      current_i: new_i\n    });\n  }\n  registerMove(event) {\n    switch (event.key) {\n      case \"ArrowRight\":\n        this.registerMoveRight();\n        break;\n      case \"ArrowLeft\":\n        this.registerMoveLeft();\n        break;\n      case \"ArrowUp\":\n        this.registerMoveUp();\n        break;\n      case \"ArrowDown\":\n        this.registerMoveDown();\n        break;\n      case \"p\":\n        clearInterval(this.state.timerId);\n        break;\n      case \"r\":\n        this.run();\n        break;\n      default:\n    }\n  }\n  run() {\n    let timerId = setInterval(() => this.updatePosition(), this.state.timer);\n    this.setState({\n      timerId: timerId\n    });\n  }\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.registerMove.bind(this));\n    this.run();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"item0\">\n            <h1 className=\"score\">Tetris</h1>\n          </div>\n          <div className=\"item1\">\n            <Grid\n              board={this.getCurrentBoard()}\n              piece={this.state.currentPiece.piece}\n              currentI={this.state.current_i}\n              currentJ={this.state.current_j}\n            />\n          </div>\n          <div className=\"item2\">\n            <Score score={this.state.score} />\n            <Next piece={this.state.nextPiece.piece} />\n            <Level />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Board;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Board from './Board';\n\nReactDOM.render(\n    <Board />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}